<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcl.dao.CompanyScoreMapper" >
  <resultMap id="BaseResultMap" type="com.mcl.pojo.CompanyScore" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="openid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="joid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="companyid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="updatetime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="comment" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="creditrate" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="atmosphererate" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="environmentrate" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="wagerate" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, openid, joid, companyid, updatetime, comment, creditrate, atmosphererate, environmentrate, 
    wagerate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from companyscore
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="isUserScoredCompany" resultType="java.lang.Integer">
      SELECT COUNT(1) FROM companyscore WHERE openid = #{openid} and companyid = #{companyid}
    </select>
  <select id="getCompAvgAbitlity" resultType="com.mcl.pojo.CompAvgAbility">
    select
AVG(creditrate) as creditrate ,
avg(atmosphererate) as atmosphererate,
avg(environmentrate) as environmentrate,
avg(wagerate) as wagerate,
companyid
from companyscore where companyid = #{companyid}
  </select>
  <select id="selectList" resultType="com.mcl.pojo.CompanyScore">
    select <include refid="Base_Column_List"/> from
    companyscore
    WHERE companyid = #{companyid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from companyscore
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mcl.pojo.CompanyScore" >
    insert into companyscore (id, openid, joid, 
      companyid, updatetime, comment, 
      creditrate, atmosphererate, environmentrate, 
      wagerate)
    values (#{id,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{joid,jdbcType=INTEGER}, 
      #{companyid,jdbcType=VARCHAR}, now(), #{comment,jdbcType=VARCHAR},
      #{creditrate,jdbcType=INTEGER}, #{atmosphererate,jdbcType=INTEGER}, #{environmentrate,jdbcType=INTEGER}, 
      #{wagerate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mcl.pojo.CompanyScore" >
    insert into companyscore
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openid != null" >
        openid,
      </if>
      <if test="joid != null" >
        joid,
      </if>
      <if test="companyid != null" >
        companyid,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="creditrate != null" >
        creditrate,
      </if>
      <if test="atmosphererate != null" >
        atmosphererate,
      </if>
      <if test="environmentrate != null" >
        environmentrate,
      </if>
      <if test="wagerate != null" >
        wagerate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="joid != null" >
        #{joid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
       now(),
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creditrate != null" >
        #{creditrate,jdbcType=INTEGER},
      </if>
      <if test="atmosphererate != null" >
        #{atmosphererate,jdbcType=INTEGER},
      </if>
      <if test="environmentrate != null" >
        #{environmentrate,jdbcType=INTEGER},
      </if>
      <if test="wagerate != null" >
        #{wagerate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcl.pojo.CompanyScore" >
    update companyscore
    <set >
      <if test="openid != null" >
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="joid != null" >
        joid = #{joid,jdbcType=INTEGER},
      </if>
      <if test="companyid != null" >
        companyid = #{companyid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = now(),
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creditrate != null" >
        creditrate = #{creditrate,jdbcType=INTEGER},
      </if>
      <if test="atmosphererate != null" >
        atmosphererate = #{atmosphererate,jdbcType=INTEGER},
      </if>
      <if test="environmentrate != null" >
        environmentrate = #{environmentrate,jdbcType=INTEGER},
      </if>
      <if test="wagerate != null" >
        wagerate = #{wagerate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcl.pojo.CompanyScore" >
    update companyscore
    set openid = #{openid,jdbcType=VARCHAR},
      joid = #{joid,jdbcType=INTEGER},
      companyid = #{companyid,jdbcType=VARCHAR},
      updatetime = now(),
      comment = #{comment,jdbcType=VARCHAR},
      creditrate = #{creditrate,jdbcType=INTEGER},
      atmosphererate = #{atmosphererate,jdbcType=INTEGER},
      environmentrate = #{environmentrate,jdbcType=INTEGER},
      wagerate = #{wagerate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>